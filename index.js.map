{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast';\nconst API_KEY = '48901919-31fb8722d9302fb6f0fb2505f';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = query => {\n  return axios\n    .get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => {\n      return response.data.hits;\n    })\n    .catch(error => {\n      console.error(error);\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return [];\n    });\n};\n","import SimpleLightbox from 'simplelightbox';\n\nexport const renderImages = images => {\n  const gallery = document.querySelector('.gallery');\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<a class=\"gallery-item\" href=\"${largeImageURL}\">\n        <div class=\"image-card\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          <div class=\"image-info\">\n            <ul class=\"list\">\n                <li class=\"list_item\">\n                <h3 class=\"item_title\">Likes</h3>\n                <p class=\"item_text\">${likes}</p></li>\n                <li class=\"list_item\">\n                <h3 class=\"item_title\">Views</h3>\n                <p class=\"item_text\">${views}</p></li>\n                <li class=\"list_item\">\n                <h3 class=\"item_title\">Comments</h3>\n                <p class=\"item_text\">${comments}</p></li>\n                <li class=\"list_item\">\n                <h3 class=\"item_title\">Downloads</h3>\n                <p class=\"item_text\">${downloads}</p></li>\n            </ul>\n          </div>\n        </div>\n      </a>`\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  const lightbox = new SimpleLightbox('.gallery-item');\n  lightbox.refresh();\n};\n","import { fetchImages } from './js/pixabay-api.js'; // for request\nimport { renderImages } from './js/render-functions.js'; // for images\nimport iziToast from 'izitoast'; // for message\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('.search-form');\nconst searchInput = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nsearchForm.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const query = searchInput.value.trim();\n  if (!query) {\n    iziToast.error({\n      title: '',\n      message: 'Please enter a search term!',\n      position: 'topRight',\n      iconUrl: '/icon/error.svg',\n      backgroundColor: '#ef4040',\n      messageColor: '#fafafb',\n      transitionIn: 'fadeInLeft',\n      transitionOut: 'fadeOutUp',\n    });\n    return;\n  }\n\n  gallery.innerHTML = '';\n  loader.style.display = 'block';\n\n  fetchImages(query)\n    .then(images => {\n      if (images.length === 0) {\n        iziToast.warning({\n          title: '',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          backgroundColor: '#ef4040',\n          messageColor: '#fafafb',\n          position: 'topRight',\n          iconUrl: '/icon/error.svg',\n          transitionIn: 'fadeInLeft',\n          transitionOut: 'fadeOutUp',\n        });\n      } else {\n        renderImages(images);\n      }\n    })\n    .catch(error => {\n      iziToast.error({\n        title: 'Error',\n        message: 'Something went wrong, please try again later!',\n      });\n      console.error('Error:', error);\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n    });\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","response","error","iziToast","renderImages","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","searchForm","searchInput","loader","event"],"mappings":"owBAGA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAcC,GAClBC,EACJ,IAAIH,EAAU,CACb,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACA,KAAKE,GACGA,EAAS,KAAK,IACtB,EACA,MAAMC,IACL,QAAQ,MAAMA,CAAK,EACnBC,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACV,CAAO,EACM,GACR,EC1BQC,EAAeC,GAAU,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC,iCAAiCL,CAAa;AAAA;AAAA,sBAEhCD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKTC,CAAK;AAAA;AAAA;AAAA,uCAGLC,CAAK;AAAA;AAAA;AAAA,uCAGLC,CAAQ;AAAA;AAAA;AAAA,uCAGRC,CAAS;AAAA;AAAA;AAAA;AAAA,WAK3C,EACA,KAAK,EAAE,EACVR,EAAQ,mBAAmB,YAAaC,CAAM,EAE7B,IAAIQ,EAAe,eAAe,EAC1C,QAAO,CAClB,ECpCMC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAc,SAAS,cAAc,eAAe,EACpDX,EAAU,SAAS,cAAc,UAAU,EAC3CY,EAAS,SAAS,cAAc,SAAS,EAE/CF,EAAW,iBAAiB,SAAUG,GAAS,CAC7CA,EAAM,eAAc,EAEpB,MAAMpB,EAAQkB,EAAY,MAAM,KAAI,EACpC,GAAI,CAAClB,EAAO,CACVI,EAAS,MAAM,CACb,MAAO,GACP,QAAS,8BACT,SAAU,WACV,QAAS,kBACT,gBAAiB,UACjB,aAAc,UACd,aAAc,aACd,cAAe,WACrB,CAAK,EACD,MACD,CAEDG,EAAQ,UAAY,GACpBY,EAAO,MAAM,QAAU,QAEvBpB,EAAYC,CAAK,EACd,KAAKM,GAAU,CACVA,EAAO,SAAW,EACpBF,EAAS,QAAQ,CACf,MAAO,GACP,QACE,2EACF,gBAAiB,UACjB,aAAc,UACd,SAAU,WACV,QAAS,kBACT,aAAc,aACd,cAAe,WACzB,CAAS,EAEDC,EAAaC,CAAM,CAE3B,CAAK,EACA,MAAMH,GAAS,CACdC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACjB,CAAO,EACD,QAAQ,MAAM,SAAUD,CAAK,CACnC,CAAK,EACA,QAAQ,IAAM,CACbgB,EAAO,MAAM,QAAU,MAC7B,CAAK,CACL,CAAC"}